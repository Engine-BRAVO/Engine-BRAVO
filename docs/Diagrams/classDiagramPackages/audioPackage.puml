@startuml audioPackageClassDiagram

package Audio{
    class Component_Proxy {}

class AudioSource implements Component_Proxy{
    - mFileName : string
    - mPlayOnAwake : bool
    - mLoop : bool
    - mVolume : int
    - mXDirection : int
    - minXDirection : const static int
    - maxXDirection : const static int
    - mMaxVelocity : const static int
    - mXVelocity : int
    + AudioSource(string aPath, bool aIsMusic=false)
    + play(bool aLooping) : void
    + stop() : void 

    + setPlayOnWake(bool aValue) : void
    + getPlayOnWake() : bool
    + setLooping(bool aLooping) : void
    + getLooping() : bool
    + setVolume(unsigned aVolume) : void
    + getVolume() : unsigned
    + setXDirection(int aXDirection) : void
    + getXDirection() : int
    + setXVelocity(int aXVelocity) : void
    + getXVelocity() : int
}

interface IAudioFacade {
    + addSound(string path) : void
    + playSound(string aPath, int aLooping, unsigned aVolume, int aDirection, int aVelocity) : void
    + addMusic(string path) : void
    + playMusic() : void
    + stopMusic() : void
}

'This class is probably useless, because the path can be retrieved directly from the audiosource. The actual functionality it was intended for can be found in the MixerContainer::mSfx
' class ComponentPathPair {
'     - mComponent : const AudioSource&
'     - mPath : const string
' }

class MixerFacade implements IAudioFacade {
    - mChannelCount : const unsigned
    - mLastUsedChannel : unsigned
    - findAvailableChannel() : int
}

class MixerContainer {
    // string is the path
    - mSfx : unordered_map<string, Mix_Chunk>
    - mMusic : Mix_Music
    + addSound(string aPath, Mix_Chunk aSound) : void
    + getSound(string aIndex) : Mix_Chunk*
    + addMusic(Mix_Music aMusic) : void
    + getMusic() : Mix_Music*
    + clear() : void
}

' class AudioResourceManager {
'     - mPaths : vector<ComponentPathPair>
'     + getPath(const AudioSource&) : string
' }

MixerFacade *-- MixerContainer
'AudioResourceManager *--"*" ComponentPathPair

}

Audio *--IAudioFacade
'Audio *-- AudioResourceManager

@enduml